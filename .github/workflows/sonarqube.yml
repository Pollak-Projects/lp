name: SonarQube analysis

on:
  push:
    branches: [ "master" ]
    paths:
      - 'server/**'
    paths-ignore:
      - 'web-client/**'
      - '.idea/**'
      - 'documentaion/**'
      - 'LICENSE'
      - '**.md'
      - 'flake.nix'
      - 'flake.lock'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  server-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Restore cached Primes
        id: maven-cache-restore
        uses: actions/cache/restore@v4
        with:
          key: linux-maven
          path: ~/.m2/repository

      - uses: actions/checkout@v4
        with:
           fetch-depth: 0

      - name: 'Set up java 22'
        uses: actions/setup-java@v4
        with:
          java-version: "22"
          distribution: "temurin"
          cache: maven

      - name: Setup maven
        if: steps.maven-cache.outputs.cache-hit != 'true'
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6

      - name: Run sonarqube scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # analysis token associated to your project
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          cd server/ && \
          mvn -P sonar \
              -Dsonar.projectKey=learningpulse-server \
              -Dsonar.projectName=learningpulse-server \
              clean verify sonar:sonar

      - name: Cache SonarQube packages
        uses: actions/cache@v4.1.2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache local Maven repository
        uses: actions/cache/save@v4
        id: maven-cache-save
        with:
          path: ~/.m2/repository
          key: linux-maven
          restore-keys: |
            linux-maven
